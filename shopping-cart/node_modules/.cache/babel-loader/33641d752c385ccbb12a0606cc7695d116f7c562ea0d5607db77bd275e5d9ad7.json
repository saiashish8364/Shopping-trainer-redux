{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cItems: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      console.log(state.cItems, state.totalQuantity);\n      const newItem = action.payload;\n      const existingItem = state.cItems.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.cItems = [...state.cItems, {\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        }];\n      } else {\n        existingItem.quantity = existingItem.quantity++;\n      }\n    },\n    removeItemFromCart() {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","cItems","totalQuantity","reducers","addItemToCart","state","action","console","log","newItem","payload","existingItem","find","item","id","itemId","price","quantity","totalPrice","title","removeItemFromCart","cartActions","actions","reducer"],"sources":["D:/git/concept-intro/react-redux-trainer/shopping-cart/src/Store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    cItems: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      console.log(state.cItems, state.totalQuantity);\r\n      const newItem = action.payload;\r\n      const existingItem = state.cItems.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.cItems = [\r\n          ...state.cItems,\r\n          {\r\n            itemId: newItem.id,\r\n            price: newItem.price,\r\n            quantity: 1,\r\n            totalPrice: newItem.price,\r\n            name: newItem.title,\r\n          },\r\n        ];\r\n      } else {\r\n        existingItem.quantity = existingItem.quantity++;\r\n      }\r\n    },\r\n    removeItemFromCart() {},\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACJ,MAAM,EAAEI,KAAK,CAACH,aAAa,CAAC;MAC9C,MAAMO,OAAO,GAAGH,MAAM,CAACI,OAAO;MAC9B,MAAMC,YAAY,GAAGN,KAAK,CAACJ,MAAM,CAACW,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACxE,IAAI,CAACH,YAAY,EAAE;QACjBN,KAAK,CAACJ,MAAM,GAAG,CACb,GAAGI,KAAK,CAACJ,MAAM,EACf;UACEc,MAAM,EAAEN,OAAO,CAACK,EAAE;UAClBE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAET,OAAO,CAACO,KAAK;UACzBjB,IAAI,EAAEU,OAAO,CAACU;QAChB,CAAC,CACF;MACH,CAAC,MAAM;QACLR,YAAY,CAACM,QAAQ,GAAGN,YAAY,CAACM,QAAQ,EAAE;MACjD;IACF,CAAC;IACDG,kBAAkBA,CAAA,EAAG,CAAC;EACxB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAC5C,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}